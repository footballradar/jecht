{"name":"Jecht","tagline":"Simple dependency injection for modern JS","body":"# Jecht - Simple DI\r\n\r\n_A basic dependency injection library for modern JS._\r\n\r\n## Quickstart\r\n\r\nInstall from NPM:\r\n\r\n`npm install jecht`\r\n\r\nAnnotate dependencies:\r\n\r\n```javascript\r\nimport {\r\n    Factory,\r\n    Inject,\r\n    Injector,\r\n    Provides\r\n} from \"jecht\";\r\n\r\nclass FooService {\r\n    getThings() {\r\n        // Get some things\r\n    }\r\n}\r\n\r\n@Inject(FooService)\r\nclass BarService {\r\n    constructor(fooService: FooService) {\r\n        this.fooService = fooService;\r\n    }\r\n}\r\n```\r\n\r\nGet instance with injected dependencies:\r\n\r\n```javascript\r\nvar injector = new Injector();\r\nvar barService: BarService = injector.get(BarService);\r\nbarService.fooService.constructor === FooService; // true\r\n```\r\n\r\nProvide alternative dependencies (for mocking, etc):\r\n\r\n```javascript\r\n@Provides(FooService)\r\nclass MockFooService {\r\n    getThings() {\r\n        // Get some other things\r\n    }\r\n}\r\n\r\nvar injector = new Injector([MockFooService]);\r\nvar barService = injector.get(BarService);\r\nbarService.fooService.constructor === MockFooService; // true\r\n```\r\n\r\nCreate a factory for a dependency:\r\n\r\n```javascript\r\nclass FooService {\r\n    getThings() {\r\n        // Get some things\r\n    }\r\n}\r\n\r\nclass OtherFooService {\r\n    getThings() {\r\n        // Get some other things\r\n    }\r\n}\r\n\r\nvar fooServiceFactory = Factory.create(function() {\r\n    if (useFoo) {\r\n        return FooService;\r\n    } else {\r\n        return OtherFooService;\r\n    }\r\n});\r\n\r\n@Inject(fooServiceFactory)\r\nclass Bar {\r\n    constructor(fooService: FooService | OtherFooService) {\r\n\r\n    }\r\n}\r\n\r\nvar useFoo = true;\r\nvar injector = new Injector();\r\nvar bar = injector.get(Bar);\r\nbar.fooService.contructor === FooService; // true\r\n```\r\n\r\n## License\r\n\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}